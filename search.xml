<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[初识vue（三）]]></title>
      <url>/2018/01/16/%E5%88%9D%E8%AF%86vue%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      <content type="html"><![CDATA[<h1 id="利用v-model双向绑定数据"><a href="#利用v-model双向绑定数据" class="headerlink" title="利用v-model双向绑定数据"></a>利用v-model双向绑定数据</h1><p>v-model可以对input或者textarea进行双向数据绑定<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app2&quot;&gt;</span><br><span class="line">	&lt;input type=&quot;text&quot; placeholder=&quot;name&quot; v-model=&apos;name&apos;&gt;</span><br><span class="line">	&lt;p&gt;&#123;&#123;name&#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;../scripts/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">	var name = new Vue(&#123;</span><br><span class="line">		el:&apos;#app2&apos;,</span><br><span class="line">		data:&#123;</span><br><span class="line">			name:&apos;&apos;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>
<p>input我比较熟悉，textarea在这里学习一下<br>textarea标签定义了多行的文本输入控件</p>
<ul>
<li>文本区容纳无限数量的文本，其中文本的默认字体是等宽字体</li>
<li>通过cols和rows来规定textarea的尺寸，也可以用css的height和width来规定  </li>
</ul>
<h3 id="下面是它的几种属性"><a href="#下面是它的几种属性" class="headerlink" title="下面是它的几种属性:"></a>下面是它的几种属性:</h3><ul>
<li><p>autofocus 刷新页面后自动获取焦点</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;textarea autofoucs=&quot;autofoucs&quot;&gt;&lt;/textarea&gt; // xhtml中不允许简写</span><br><span class="line">&lt;textarea autofoucs&gt;&lt;/textarea&gt; // 新版本中允许简写</span><br></pre></td></tr></table></figure>
</li>
<li><p>cols用于规定textarea的可见宽度</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;textarea cols=&quot;30&quot;&gt;&lt;/textarea&gt; //如果通过css设置了宽高，这个属性就不起作用了</span><br></pre></td></tr></table></figure>
</li>
<li><p>disabled用于禁用此文本区</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;textarea disabled=&apos;disabled&apos;&gt;&lt;/textarea&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>form 规定文本区域所属的一个或者多个表单</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=&quot;/demo/demo_form.asp&quot; id=&quot;usrform&quot;&gt;</span><br><span class="line">  Name: &lt;input type=&quot;text&quot; name=&quot;usrname&quot;&gt;</span><br><span class="line">  &lt;input type=&quot;submit&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;textarea rows=&quot;4&quot; cols=&quot;50&quot; name=&quot;comment&quot; form=&quot;usrform&quot;&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>maxlength 规定文本区域的最大字符数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;textarea maxlength=&quot;50&quot;&gt;</span><br><span class="line"> Enter text here...</span><br><span class="line">&lt;/textarea&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>name属性为文本区域规定的名称，用于在js中对元素进行引用，或者在表单提交后，对表单数据进行引用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;textarea cols=&quot;30&quot; rows=&quot;5&quot; name=&quot;W3School_text&quot;&gt;</span><br><span class="line">领先的 Web 技术教程 - 全部免费</span><br><span class="line">在w3school，你可以找到你所需要的所有的网站建设教程。</span><br><span class="line">从基础的HTML到XHTML，乃至进阶的XML、SQL、数据库、多媒体和WAP。</span><br><span class="line">&lt;/textarea&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>placeholder  老朋友了</p>
</li>
<li>readonly: 规定文本区域为只读，无法对内容进行修改，但用户可以通过 tab 键切换到该控件，选取或复制其中的内容。（未完）</li>
</ul>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[初识vue（二）]]></title>
      <url>/2018/01/16/%E5%88%9D%E8%AF%86vue%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      <content type="html"><![CDATA[<h1 id="利用v-for指令写列表"><a href="#利用v-for指令写列表" class="headerlink" title="利用v-for指令写列表"></a>利用v-for指令写列表</h1><p>列表需要进行数据的表示，在vue中需要利用双大括号（Mustache语法）来实时显示双向绑定的数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;book.name&#125;&#125;</span><br></pre></td></tr></table></figure></p>
<p>v-for指令是循环指令，利用v-for可以写出最基本的li列表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">	&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">		&lt;ul&gt;</span><br><span class="line">			&lt;li v-for=&apos;book in books&apos;&gt;&#123;&#123;book.name&#125;&#125;&lt;/li&gt;</span><br><span class="line">		&lt;/ul&gt;</span><br><span class="line">	&lt;/div&gt;</span><br><span class="line">	&lt;script type=&quot;text/javascript&quot; src=&quot;../scripts/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">	&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">		var list = new Vue(&#123;</span><br><span class="line">			el:&apos;#app&apos;,</span><br><span class="line">			data:&#123;</span><br><span class="line">				books:[</span><br><span class="line">					&#123;name:1&#125;,</span><br><span class="line">					&#123;name:2&#125;,</span><br><span class="line">					&#123;name:3&#125;</span><br><span class="line">				]</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;)</span><br><span class="line">	&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[初识vue（一）]]></title>
      <url>/2018/01/16/%E5%88%9D%E8%AF%86vue%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      <content type="html"><![CDATA[<h1 id="什么是vue-js"><a href="#什么是vue-js" class="headerlink" title="什么是vue.js"></a>什么是vue.js</h1><p>vue.js 是尤雨溪开发的渐进式前端MVVM框架，提供了现代web开发中常见的高级功能，比如</p>
<ul>
<li>解耦视图和数据</li>
<li>可复用的组件</li>
<li>前端路由</li>
<li>状态管理</li>
<li>虚拟DOM  </li>
</ul>
<p>vue.js简单小巧，压缩后的大小仅有17kb，在基础篇的学习中，我主要学习vue.js 2中的几个基础内容，包括：</p>
<ul>
<li>双向数据绑定（页面中实时渲染数据）</li>
<li>计算属性</li>
<li>内置指令和自定义指令</li>
<li>组件</li>
</ul>
<p>MVVM模式是由经典的MVC（模型-视图-控制）衍生来的，当视图层（view）发生改变时，会自动更新到视图模型（view-model）中，反之亦然。视图和视图模型之间通过双向绑定（data-binding）来建立联系</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">视图层-&gt;&gt;视图模型: data-binding</span><br><span class="line">视图模型-&gt;&gt;视图层: data-binding</span><br><span class="line">模型-&gt;&gt;视图模型: 双向</span><br><span class="line">视图模型-&gt;&gt;模型: 双向</span><br></pre></td></tr></table></figure>
<h1 id="vue-js和jquery等的不同"><a href="#vue-js和jquery等的不同" class="headerlink" title="vue.js和jquery等的不同"></a>vue.js和jquery等的不同</h1><p>html code:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">        </span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p>
<h3 id="我们用jq来绑定dom的点击事件"><a href="#我们用jq来绑定dom的点击事件" class="headerlink" title="我们用jq来绑定dom的点击事件"></a>我们用jq来绑定dom的点击事件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if (showBtn)&#123;</span><br><span class="line">    var btn = $(&apos;&lt;button&gt;click&lt;/button&gt;&apos;);</span><br><span class="line">    btn.on(&apos;click&apos;,function()&#123;</span><br><span class="line">        console.log(&apos;clicked&apos;)</span><br><span class="line">    &#125;);</span><br><span class="line">    $(&apos;#app&apos;).append(btn);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="我们用vue来进行dom事件的点击绑定"><a href="#我们用vue来进行dom事件的点击绑定" class="headerlink" title="我们用vue来进行dom事件的点击绑定"></a>我们用vue来进行dom事件的点击绑定</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">        &lt;button v-if=&apos;showBtn&apos; v-on:click=&apos;hindleClick&apos;&gt;click me&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script src=&quot;../vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var click = new Vue(&#123;</span><br><span class="line">        el:&apos;#app&apos;,</span><br><span class="line">        data:&#123;</span><br><span class="line">            showBtn:true,</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            hindleClick:function()&#123;</span><br><span class="line">                console.log(&apos;clicked&apos;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>通过vue，我们就是可以只关注自己的数据即data和方法methods，而不用去另行操作dom。dom的事情vue会帮忙搞定。</p>
<h1 id="如何最基本的使用vue"><a href="#如何最基本的使用vue" class="headerlink" title="如何最基本的使用vue"></a>如何最基本的使用vue</h1><p>仍然分析上面的那段代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">        &lt;button v-if=&apos;showBtn&apos; v-on:click=&apos;hindleClick&apos;&gt;click me&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script src=&quot;../vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var click = new Vue(&#123;</span><br><span class="line">        el:&apos;#app&apos;,</span><br><span class="line">        data:&#123;</span><br><span class="line">            showBtn:true,</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            hindleClick:function()&#123;</span><br><span class="line">                console.log(&apos;clicked&apos;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>
<p>如果我们想要为一个按钮绑定一个点击弹出事件，首先需要写出html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;button&gt;click me&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>
<p>我们还需要为这个div或者这个button绑定一个唯一的标示，当然classname也是可以的，视情况而定。选择div或者button来绑定id要视情况而定，一般如果需要遍历数据的话就得进行父级盒子的绑定（例子二）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;button&gt;click me&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>
<p>引用vue.js是必要的，这里我引用的是自己下载好的vue.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&apos;../scripts/vue.js&apos;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>
<p>在新的script标签中建立vue实例，并且存储数据。实例的意思是可以进行操作的对象，原生js中声名对象的其中一种方式是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var a = new Object();</span><br></pre></td></tr></table></figure></p>
<p>所以在vue中将对象实例化的写法是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var a = new Vue(&#123;</span><br><span class="line">    el:&apos;#app&apos;,</span><br><span class="line">    data:&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;,</span><br><span class="line">    methods:&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<p>其中，el绑定的是id或者classname，类似于jq中$(‘#app’)，data中存放的是一些绑定的数据，methods中存放的是使用的js函数或者方法。</p>
<p>现在html和js部分分别已经准备好了，使用指令是将它们建立联系的方法</p>
<ul>
<li>v-if 类似于if(){};</li>
<li>v-on 用于绑定事件，在此段代码中类似于onclick=””;</li>
</ul>
<p>分析指令，v-if中需要true或者false作为参数，这是一种数据类型，需要一个参数showBtn，将它的值存储在data数据中，实现数据和视图的分离。click事件也需要绑定一个具体的行为，点击后会发生什么属于方法的一种，因此click需要绑定一个fuction，这个function需要放在methods中。所以现在的代码基本已经搭建完毕。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;button id=&apos;app&apos; v-if=showBtn v-on:click=&apos;hindleClick&apos;&gt;click me&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;script src=&apos;../scripts/vue.js&apos;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var click = new Vue(&#123;</span><br><span class="line">        el:&apos;#app&apos;,</span><br><span class="line">        data:&#123;</span><br><span class="line">            showBtn:true</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            hindleClick:function()&#123;</span><br><span class="line">                alert(&apos;good click&apos;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[如何优雅（无限）的使用（试用） versions]]></title>
      <url>/2017/12/29/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%EF%BC%88%E6%97%A0%E9%99%90%EF%BC%89%E7%9A%84%E4%BD%BF%E7%94%A8%EF%BC%88%E8%AF%95%E7%94%A8%EF%BC%89-versions/</url>
      <content type="html"><![CDATA[<p>其实是一篇如何无限试用的教程，仅仅是为了测试和交流，如果有能力的同学请移步<a href="https://www.versionsapp.com" target="_blank" rel="noopener">官网</a>购买正版</p>
<p> 本猫的mac升级到了 macos 10.12.6 之后，网上流传的所谓的versions破解版本就不可用了，总会出现闪崩退出的情况。经历了command line + bbeidt 的黑暗时代和 cornerstone 的混乱时代，本猫决定自己尝试破解 versions ， 来一解相思之苦。。。  </p>
<p> 第一次胡乱尝试的结果就是我的小mac成功的重装了系统，真心想念我们亲爱的水果出的时间胶囊。。。</p>
<p> 废话少说，放出教程。 接招吧，versions君：   </p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">* 运行chean app软件，清楚残留的versions文件。如果以前的. versions文件已经通过常规方式删除，需去官网下载安装versions，然后利用cleanapp清除；</span><br><span class="line">* 修改系统时间为versions未过期的时间. </span><br><span class="line">* 终端cd到user目录下，依次运行如下命令：</span><br><span class="line">ps：如需要输入密码为开机密码</span><br><span class="line">sudo rm ~/.CF89AA64</span><br><span class="line">sudo rm ~/Library/.FB64CF89</span><br><span class="line">sudo rm ~/Library/Preferences/com.blackpixel.versions.plist</span><br><span class="line">sudo open ~/Library/Preferences/.GlobalPreferences.plist        默认为xcode打开</span><br><span class="line">Delete the key: com.blackpixel.versions.ezsRequiredToken and save it.  </span><br><span class="line">* 重启机器，然后修改系统时间为自动，即正常时间</span><br><span class="line">* 安装 versions，试用期为1个月零1天，到期后重复上面操作即可。</span><br></pre></td></tr></table></figure>
<p> 附录 ：<a href="http://pan.baidu.com/s/1kV7Tzjp" target="_blank" rel="noopener">百度云链接</a><br> PassWord : 9ggv</p>
]]></content>
      
        
        <tags>
            
            <tag> svn </tag>
            
            <tag> 工具集合 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[终于有时间能够迁移博客了]]></title>
      <url>/2017/10/19/%E7%BB%88%E4%BA%8E%E6%9C%89%E6%97%B6%E9%97%B4%E8%83%BD%E5%A4%9F%E8%BF%81%E7%A7%BB%E5%8D%9A%E5%AE%A2%E4%BA%86/</url>
      <content type="html"><![CDATA[<h3 id="我一直认为当猿星人最大的乐趣就是折腾"><a href="#我一直认为当猿星人最大的乐趣就是折腾" class="headerlink" title="我一直认为当猿星人最大的乐趣就是折腾"></a>我一直认为当猿星人最大的乐趣就是折腾</h3><p>从成为一名码农开始，已经过了三年多的时间。从一开始的手写笔记开始，到最后决定将博客迁移到github，中间折腾了很多次。从腾讯云到阿里云再到搬瓦工，从简书到印象笔记到知乎，从wordpress到jekyll到最后选择hexo，中间花费了大量的时间，现在终于可以说服我安安静静地码字，开开心心的记录自己的每一天。</p>
<h4 id="其实我一开始是喜欢-wordpress"><a href="#其实我一开始是喜欢-wordpress" class="headerlink" title="其实我一开始是喜欢 wordpress"></a>其实我一开始是喜欢 wordpress</h4><p>两位峰神 <a href="https://www.liaoxuefeng.com" target="_blank" rel="noopener">廖雪峰</a> , <a href="http://www.ruanyifeng.com/home.html" target="_blank" rel="noopener">阮一峰</a> 一直是我敬仰的，他们的博客影响了很多像我这样初步踏入编程世界的小白。他们把自己的经验和知识转换成一种通俗易懂的语言，让我在敲开大门的时候感受到了来自编程世界的善意。我也梦想着有一天自己的教程也能给想要踏进这个世界的猿人们些许的帮助。所以我一开始选择了腾讯云，通过wordpress来搭建了自己的第一个博客。选腾讯的原因很简单，学生一个月一块钱，一年才12，直到我毕业没有了使用资质。后来我又选了阿里云，因为我把当时某个朋友的网站挂到了阿里云上，在他的服务器上又安装了我的blog。。。。。。。<br>直到某天，乱炖挂了，蓝灯挂了，香蕉加速挂了，一切仿佛又回到了局域网。于是搬瓦工成了我的选择，ss加不用备案实在是太爽。后来公司开了香港专线，再用搬瓦工就属于浪费了，从此进入了jekyll时代。  </p>
<h4 id="混乱的-jekyll-时代"><a href="#混乱的-jekyll-时代" class="headerlink" title="混乱的 jekyll 时代"></a>混乱的 jekyll 时代</h4><p>原因可能很简单，当时自己没有mac，用公司的mac部署自己的blog环境实在是在监视之下，大家都知道win上部署r环境的繁琐之处，搞坏了女友的机子，自己的机子搞成了黑苹果，还是没有成功，可能我天赋有限吧，又不肯继续折腾，无奈放弃。</p>
<h4 id="终于选择了hexo。"><a href="#终于选择了hexo。" class="headerlink" title="终于选择了hexo。"></a>终于选择了hexo。</h4><p>只用node的环境不要太爽！！！，超简单配置，从此安安心心码字，这感觉6的起飞了。这个环境一直搭建了很长时间了，最近比较忙，刚给发布会扫尾完成，有时间慢慢的迁移自己的博客，望一切顺利。</p>
]]></content>
      
        
    </entry>
    
  
  
</search>
